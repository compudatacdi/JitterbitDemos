<?xml version="1.0" standalone="yes"?>
<GenXDataDataSet xmlns="http://www.epicor.com/Ice/300/BO/GenXData/GenXData">
  <xs:schema id="GenXDataDataSet" targetNamespace="http://www.epicor.com/Ice/300/BO/GenXData/GenXData" xmlns:mstns="http://www.epicor.com/Ice/300/BO/GenXData/GenXData" xmlns="http://www.epicor.com/Ice/300/BO/GenXData/GenXData" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
    <xs:element name="GenXDataDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:ExportFormat="Gen3" msprop:IsMain="true">
      <xs:complexType>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element name="XXXDef" msprop:SchemaName="Ice">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="Company" msprop:ReadOnly="True" msprop:Like="Company.Company" msprop:Format="x(8)" type="xs:string" />
                <xs:element name="ProductID" msdata:Caption="Product" msprop:ReadOnly="True" msprop:Like="DashBdDef.ProductID" msprop:Format="x(2)" type="xs:string" />
                <xs:element name="TypeCode" msdata:Caption="Type" msprop:ReadOnly="True" msprop:Like="XXXDef.TypeCode" msprop:Format="x(20)" type="xs:string" />
                <xs:element name="Key1" msdata:Caption="Key 1" msprop:Like="XXXDef.Key1" msprop:Format="x(50)" type="xs:string" />
                <xs:element name="Key2" msdata:Caption="Key 2" msprop:Like="XXXDef.Key2" msprop:Format="x(100)" type="xs:string" />
                <xs:element name="Key3" msdata:Caption="Key 3" msprop:Like="XXXDef.Key3" msprop:Format="x(50)" type="xs:string" />
                <xs:element name="Description" msprop:Format="x(60)" type="xs:string" minOccurs="0" />
                <xs:element name="LastUpdated" msdata:Caption="Last Updated" msprop:ReadOnly="True" type="xs:dateTime" minOccurs="0" />
                <xs:element name="LastUpdatedBy" msdata:Caption="User ID" msprop:ReadOnly="True" msprop:Like="UserFile.UserID" msprop:Format="x(75)" type="xs:string" minOccurs="0" />
                <xs:element name="Version" msprop:ReadOnly="True" msprop:Format="x(20)" type="xs:string" minOccurs="0" />
                <xs:element name="DataBaseVersion" msprop:ReadOnly="True" msprop:Format="99999999" type="xs:int" minOccurs="0" />
                <xs:element name="SysCharacter01" msprop:Format="x(16000)" type="xs:string" minOccurs="0" />
                <xs:element name="SysCharacter02" msprop:Format="x(16000)" type="xs:string" minOccurs="0" />
                <xs:element name="SysCharacter03" msprop:Format="x(16000)" type="xs:string" minOccurs="0" />
                <xs:element name="SysCharacter04" msprop:ReadOnly="True" msprop:Format="x(16000)" type="xs:string" minOccurs="0" />
                <xs:element name="SysCharacter05" msprop:ReadOnly="True" msprop:Format="x(16000)" type="xs:string" minOccurs="0" />
                <xs:element name="SysNumber01" type="xs:decimal" minOccurs="0" />
                <xs:element name="SysNumber02" type="xs:decimal" minOccurs="0" />
                <xs:element name="SysNumber03" type="xs:decimal" minOccurs="0" />
                <xs:element name="SysNumber04" type="xs:decimal" minOccurs="0" />
                <xs:element name="SysNumber05" type="xs:decimal" minOccurs="0" />
                <xs:element name="SysDate01" type="xs:dateTime" minOccurs="0" />
                <xs:element name="SysDate02" type="xs:dateTime" minOccurs="0" />
                <xs:element name="SysDate03" type="xs:dateTime" minOccurs="0" />
                <xs:element name="SysDate04" type="xs:dateTime" minOccurs="0" />
                <xs:element name="SysDate05" type="xs:dateTime" minOccurs="0" />
                <xs:element name="SysCheckBox01" type="xs:boolean" minOccurs="0" />
                <xs:element name="SysCheckBox02" type="xs:boolean" minOccurs="0" />
                <xs:element name="SysCheckBox03" type="xs:boolean" minOccurs="0" />
                <xs:element name="SysCheckBox04" type="xs:boolean" minOccurs="0" />
                <xs:element name="SysCheckBox05" type="xs:boolean" minOccurs="0" />
                <xs:element name="CommentText" msprop:Format="x(16000)" type="xs:string" minOccurs="0" />
                <xs:element name="CGCCode" msprop:ReadOnly="True" msprop:Format="x(8)" type="xs:string" />
                <xs:element name="SystemFlag" msprop:ReadOnly="True" type="xs:boolean" minOccurs="0" />
                <xs:element name="SysRevID" msprop:SystemColumn="True" msprop:Format="&gt;&gt;,&gt;&gt;&gt;,&gt;&gt;9" type="xs:long" minOccurs="0" />
                <xs:element name="SysRowID" msdata:DataType="System.Guid, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" msprop:SystemColumn="True" msprop:Format="X(36)" type="xs:string" minOccurs="0" />
                <xs:element name="SysCheckBox06" type="xs:boolean" minOccurs="0" />
                <xs:element name="SysCheckBox07" type="xs:boolean" minOccurs="0" />
                <xs:element name="OnMenu" msprop:ReadOnly="True" type="xs:boolean" minOccurs="0" />
                <xs:element name="Duplicate" msprop:ReadOnly="True" type="xs:boolean" minOccurs="0" />
                <xs:element name="Cosmetic" msprop:ReadOnly="True" type="xs:boolean" minOccurs="0" />
                <xs:element name="Content" msprop:Format="x(16000)" type="xs:string" minOccurs="0" />
                <xs:element name="BitFlag" msdata:Caption="Bit Flag" msprop:ReadOnly="True" msprop:SystemColumn="True" msprop:External="True" type="xs:int" minOccurs="0" />
                <xs:element name="RowMod" msprop:SystemColumn="True" msprop:External="True" type="xs:string" minOccurs="0" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:choice>
      </xs:complexType>
      <xs:unique name="XXXDefPK_XXXDef" msdata:PrimaryKey="true">
        <xs:selector xpath=".//mstns:XXXDef" />
        <xs:field xpath="mstns:Company" />
        <xs:field xpath="mstns:ProductID" />
        <xs:field xpath="mstns:TypeCode" />
        <xs:field xpath="mstns:CGCCode" />
        <xs:field xpath="mstns:Key1" />
        <xs:field xpath="mstns:Key2" />
        <xs:field xpath="mstns:Key3" />
      </xs:unique>
    </xs:element>
  </xs:schema>
  <XXXDef>
    <Company>PI03</Company>
    <ProductID>EP</ProductID>
    <TypeCode>Customization</TypeCode>
    <Key1>test_api</Key1>
    <Key2>App.SalesOrderEntry.SalesOrderForm</Key2>
    <Key3 />
    <Description>testing api calls</Description>
    <LastUpdated>2021-06-02T00:00:00-04:00</LastUpdated>
    <LastUpdatedBy>manager</LastUpdatedBy>
    <Version>6/2/2021 9:47:11 AM</Version>
    <DataBaseVersion>0</DataBaseVersion>
    <SysCharacter01 />
    <SysCharacter02 />
    <SysCharacter03 />
    <SysCharacter04>Pass</SysCharacter04>
    <SysCharacter05>3.2.700.0</SysCharacter05>
    <SysNumber01>0.000000000</SysNumber01>
    <SysNumber02>0.000000000</SysNumber02>
    <SysNumber03>0.000000000</SysNumber03>
    <SysNumber04>0.000000000</SysNumber04>
    <SysNumber05>0.000000000</SysNumber05>
    <SysCheckBox01>false</SysCheckBox01>
    <SysCheckBox02>false</SysCheckBox02>
    <SysCheckBox03>false</SysCheckBox03>
    <SysCheckBox04>false</SysCheckBox04>
    <SysCheckBox05>false</SysCheckBox05>
    <CommentText />
    <CGCCode />
    <SystemFlag>false</SystemFlag>
    <SysRevID>72590010</SysRevID>
    <SysRowID>06428864-96e7-4183-a208-7a6360de9596</SysRowID>
    <SysCheckBox06>false</SysCheckBox06>
    <SysCheckBox07>false</SysCheckBox07>
    <OnMenu>false</OnMenu>
    <Duplicate>false</Duplicate>
    <Cosmetic>false</Cosmetic>
    <Content>&lt;CustomizationDS xmlns="http://tempuri.org/XMLSchema.xsd"&gt;
  &lt;xs:schema id="CustomizationDS" targetNamespace="http://tempuri.org/XMLSchema.xsd" xmlns:mstns="http://tempuri.org/XMLSchema.xsd" xmlns="http://tempuri.org/XMLSchema.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified"&gt;
    &lt;xs:element name="CustomizationDS" msdata:IsDataSet="true" msdata:Locale="" msprop:BuildVersion="3.2.700.0"&gt;
      &lt;xs:complexType&gt;
        &lt;xs:choice minOccurs="0" maxOccurs="unbounded"&gt;
          &lt;xs:element name="Controls"&gt;
            &lt;xs:complexType&gt;
              &lt;xs:sequence&gt;
                &lt;xs:element name="FormsID" type="xs:string" /&gt;
                &lt;xs:element name="ControlName" type="xs:string" /&gt;
                &lt;xs:element name="Key" type="xs:string" /&gt;
                &lt;xs:element name="ParentControlKey" type="xs:string" /&gt;
                &lt;xs:element name="ControlType" type="xs:string" /&gt;
                &lt;xs:element name="Company" type="xs:string" /&gt;
                &lt;xs:element name="Plant" type="xs:string" /&gt;
                &lt;xs:element name="DcdUserId" type="xs:string" /&gt;
                &lt;xs:element name="GroupID" type="xs:string" /&gt;
                &lt;xs:element name="ControlsID" type="xs:string" /&gt;
              &lt;/xs:sequence&gt;
            &lt;/xs:complexType&gt;
          &lt;/xs:element&gt;
          &lt;xs:element name="Properties"&gt;
            &lt;xs:complexType&gt;
              &lt;xs:sequence&gt;
                &lt;xs:element name="FormsID" type="xs:string" /&gt;
                &lt;xs:element name="ControlName" type="xs:string" /&gt;
                &lt;xs:element name="Key" type="xs:string" /&gt;
                &lt;xs:element name="PropertyName" type="xs:string" /&gt;
                &lt;xs:element name="PropertyValue" type="xs:string" /&gt;
                &lt;xs:element name="Company" type="xs:string" /&gt;
                &lt;xs:element name="Plant" type="xs:string" /&gt;
                &lt;xs:element name="DcdUserID" type="xs:string" /&gt;
                &lt;xs:element name="GroupID" type="xs:string" /&gt;
                &lt;xs:element name="PropertiesID" type="xs:string" /&gt;
              &lt;/xs:sequence&gt;
            &lt;/xs:complexType&gt;
          &lt;/xs:element&gt;
        &lt;/xs:choice&gt;
      &lt;/xs:complexType&gt;
    &lt;/xs:element&gt;
  &lt;/xs:schema&gt;
  &lt;Controls&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;btnTest&lt;/ControlName&gt;
    &lt;Key&gt;fddd0d23-f30e-42c6-a2ee-45be848e8247&lt;/Key&gt;
    &lt;ParentControlKey&gt;006caf0c-d74d-4ec1-9d92-43eda1f2af96&lt;/ParentControlKey&gt;
    &lt;ControlType&gt;Ice.Lib.Framework.EpiButton&lt;/ControlType&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserId /&gt;
    &lt;GroupID /&gt;
    &lt;ControlsID /&gt;
  &lt;/Controls&gt;
  &lt;Controls&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;microsoft.extensions.http.dll&lt;/ControlName&gt;
    &lt;Key&gt;EpiString.ExecutionPath*microsoft.extensions.http.dll&lt;/Key&gt;
    &lt;ParentControlKey /&gt;
    &lt;ControlType&gt;AssemblyReference&lt;/ControlType&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserId /&gt;
    &lt;GroupID /&gt;
    &lt;ControlsID /&gt;
  &lt;/Controls&gt;
  &lt;Controls&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;newtonsoft.json.dll&lt;/ControlName&gt;
    &lt;Key&gt;EpiString.ExecutionPath*newtonsoft.json.dll&lt;/Key&gt;
    &lt;ParentControlKey /&gt;
    &lt;ControlType&gt;AssemblyReference&lt;/ControlType&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserId /&gt;
    &lt;GroupID /&gt;
    &lt;ControlsID /&gt;
  &lt;/Controls&gt;
  &lt;Controls&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;txtTestResults&lt;/ControlName&gt;
    &lt;Key&gt;1a023fc8-c7ef-43a3-b45e-ce619976ad60&lt;/Key&gt;
    &lt;ParentControlKey&gt;006caf0c-d74d-4ec1-9d92-43eda1f2af96&lt;/ParentControlKey&gt;
    &lt;ControlType&gt;Ice.Lib.Framework.EpiTextBox&lt;/ControlType&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserId /&gt;
    &lt;GroupID /&gt;
    &lt;ControlsID /&gt;
  &lt;/Controls&gt;
  &lt;Controls&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;system.text.encodings.web.dll&lt;/ControlName&gt;
    &lt;Key&gt;EpiString.ExecutionPath*system.text.encodings.web.dll&lt;/Key&gt;
    &lt;ParentControlKey /&gt;
    &lt;ControlType&gt;AssemblyReference&lt;/ControlType&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserId /&gt;
    &lt;GroupID /&gt;
    &lt;ControlsID /&gt;
  &lt;/Controls&gt;
  &lt;Controls&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;system.text.encodings.web.xml.dll&lt;/ControlName&gt;
    &lt;Key&gt;EpiString.ExecutionPath*system.text.encodings.web.xml&lt;/Key&gt;
    &lt;ParentControlKey /&gt;
    &lt;ControlType&gt;AssemblyReference&lt;/ControlType&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserId /&gt;
    &lt;GroupID /&gt;
    &lt;ControlsID /&gt;
  &lt;/Controls&gt;
  &lt;Controls&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;system.text.json.dll&lt;/ControlName&gt;
    &lt;Key&gt;EpiString.ExecutionPath*system.text.json.dll&lt;/Key&gt;
    &lt;ParentControlKey /&gt;
    &lt;ControlType&gt;AssemblyReference&lt;/ControlType&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserId /&gt;
    &lt;GroupID /&gt;
    &lt;ControlsID /&gt;
  &lt;/Controls&gt;
  &lt;Controls&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;system.memory.dll&lt;/ControlName&gt;
    &lt;Key&gt;EpiString.ExecutionPath*system.memory.dll&lt;/Key&gt;
    &lt;ParentControlKey /&gt;
    &lt;ControlType&gt;AssemblyReference&lt;/ControlType&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserId /&gt;
    &lt;GroupID /&gt;
    &lt;ControlsID /&gt;
  &lt;/Controls&gt;
  &lt;Properties&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;Customization&lt;/ControlName&gt;
    &lt;Key&gt;2dcd1674-5e34-4d98-b493-c75747027376&lt;/Key&gt;
    &lt;PropertyName&gt;Script&lt;/PropertyName&gt;
    &lt;PropertyValue&gt;// **************************************************
// Custom code for SalesOrderForm
// Created: 5/19/2021 2:57:23 PM
// **************************************************

extern alias Erp_Contracts_BO_AlternatePart;
extern alias Erp_Contracts_BO_SalesOrder;
extern alias Erp_Contracts_BO_Quote;
extern alias Erp_Contracts_BO_Part;
extern alias Erp_Contracts_BO_Customer;
extern alias Erp_Contracts_BO_OrderDtlSearch;
extern alias Erp_Contracts_BO_OrderHist;
extern alias Erp_Contracts_BO_RMAProc;
extern alias Erp_Contracts_BO_QuoteDtlSearch;
extern alias Erp_Contracts_BO_SerialNumberSearch;
extern alias Erp_Contracts_BO_ShipTo;
extern alias Newtonsoft_Json;
extern alias System_Text_Encodings_Web;
extern alias System_Text_Json;
extern alias System_Memory;

using System;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.Windows.Forms;
using Erp.Adapters;
using Erp.UI;
using Ice.Lib;
using Ice.Adapters;
using Ice.Lib.Customization;
using Ice.Lib.ExtendedProps;
using Ice.Lib.Framework;
using Ice.Lib.Searches;
using Ice.UI.FormFunctions;


using System;
using System.Collections.Generic;
using System.Net.Http;
using System.Net.Http.Headers;

using System.Threading.Tasks;

//3:
/*
//https://www.forcetalks.com/blog/integrate-net-console-application-with-salesforce-rest-api/
using System;
using System.Collections.Generic;
using System.Net;
using System.Net.Http;
using System.Threading.Tasks;
*/


//using Json.NET;
using Newtonsoft.Json.Linq;


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Net;
using System.Net.Http;
using System.Threading.Tasks;
//add ref to: Newtonsoft.Json.dll
using Newtonsoft.Json;
//using System.Web.UI;
//using System.Web.Script.Serialization;
//using System.Web.Script;
//System.Text.Encodings.Web.dll
//using System.Text.Json;
//using System.Text.Json.Serialization;


using System.Text.Json;
//using System.Json;


public class Script
{
	// ** Wizard Insert Location - Do Not Remove 'Begin/End Wizard Added Module Level Variables' Comments! **
	// Begin Wizard Added Module Level Variables **

	// End Wizard Added Module Level Variables **

	// Add Custom Module Level Variables Here **


//https://dev.to/rachelsoderberg/integrating-c-net-and-salesforce-s-rest-api-d00
	//status 400 bad request:
    //public const string LoginEndpoint = "https://test.salesforce.com/services/oauth2/token";
	//status 200 OK:
    //public const string LoginEndpoint = "https://cdi-dev-ed.my.salesforce.com/";
    public const string LoginEndpoint = "https://eb1-dev-ed.my.salesforce.com/services/oauth2/token";
//    public const string ApiEndpoint = "/services/data/51.0/"; //Use your org's version number
    public const string ApiEndpoint = "/services/data/v51.0/"; //Use your org's version number
	//NOTE: get version from the workbench tool similar to epicor swagger
    private string Username { get; set; }
    private string Password { get; set; }
    private string Token { get; set; }
    private string ClientId { get; set; }
    private string ClientSecret { get; set; }
    public string AuthToken { get; set; }
    public string ServiceUrl { get; set; }
    //static readonly HttpClient Client;
    //static HttpClient Client;
    //static readonly HttpClient Client = new HttpClient();
    static HttpClient Client = new HttpClient();

        
	//3:
	/*
	//https://www.forcetalks.com/blog/integrate-net-console-application-with-salesforce-rest-api/
	public static string USERNAME = "frmartell3@gmail.com";
    public static string PASSWORD = "Spider#8.3";
    public static string TOKEN ="fGwleDX053vvNRuZSwWqQCvgi";
    public static string CONSUMER_KEY = "REPLACE WITH YOUR CONNECTED APP CONSUMER KEY";
    public static string CONSUMER_SECRET = "REPLACE WITH YOUR CONNECTED APP CONSUMER SECRET";
    public static string TOKEN_REQUEST_ENDPOINTURL = "https://login.salesforce.com/services/oauth2/token";
    //public static string TOKEN_REQUEST_QUERYURL = "/services/data/v43.0/query?q=select+Id+,name+from+account+limit+10";
    public static string TOKEN_REQUEST_QUERYURL = "/services/data/v51.0/query?q=select+Id+,name+from+account+limit+10";
	//note: got the version from the sf workbench thingy (like epicor swagger)
	*/

	public void InitializeCustomCode()
	{
		// ** Wizard Insert Location - Do not delete 'Begin/End Wizard Added Variable Initialization' lines **
		// Begin Wizard Added Variable Initialization

		// End Wizard Added Variable Initialization

		// Begin Wizard Added Custom Method Calls

		// End Wizard Added Custom Method Calls

		//btnTest.Click += btnTest_Click;
		btnTest.Click += old_btnTest_Click;

	}

	public void DestroyCustomCode()
	{
		// ** Wizard Insert Location - Do not delete 'Begin/End Wizard Added Object Disposal' lines **
		// Begin Wizard Added Object Disposal

		// End Wizard Added Object Disposal

		// Begin Custom Code Disposal

		// End Custom Code Disposal

		//btnTest.Click -= btnTest_Click;
		btnTest.Click -= old_btnTest_Click;

	}


	public async static Task AsyncQueryRequest(string token, string url) 
	{
        //string TOKEN_REQUEST_QUERYURL = "/services/data/v43.0/query?q=select+Id+,name+from+account+limit+10";
        string TOKEN_REQUEST_QUERYURL = "/services/data/v51.0/query?q=select+Id+,name+from+account+limit+10";

            HttpClient _httpClient = new HttpClient();
            var request = new HttpRequestMessage {
                Method = HttpMethod.Get,
                RequestUri = new Uri(url + TOKEN_REQUEST_QUERYURL),
                Content = null
            };
            request.Headers.Authorization = new AuthenticationHeaderValue("Bearer", token);
            var responseMessage = await new HttpClient().SendAsync(request).ConfigureAwait(false);
            var response = await responseMessage.Content.ReadAsStringAsync().ConfigureAwait(false);

MessageBox.Show("response: " + response.ToString());
//message: session expired or invalid, error code: INVALID_SESSIN_ID


            //var serializer = new JavaScriptSerializer();
/*
            var serializer = new JavaScriptSerializer();

            var serializedResult = serializer.Deserialize(response);
            foreach (var rootObj in serializedResult.records) {
                Record leadRecord = rootObj;
                Console.WriteLine(leadRecord.Id + " " + leadRecord.Name);
            }
            return serializedResult;
*/
        }

	public void btnTest_Click(object sender, System.EventArgs args)
	{
/*
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Net;
using System.Net.Http;
using System.Threading.Tasks;
*/

		//string USERNAME = "REPLACE WITH YOUR USERNAME";
		string USERNAME = "frmartell3@gmail.com";
        //string PASSWORD = "REPLACE WITH YOUR PASSWORD";
        string PASSWORD = "Spider#8.3";
        //string TOKEN = "REPLACE WITH YOUR SECURITY TOKEN";
        string TOKEN = "VVrWKdSl9I9TJzL4bFvYmDdJ";
        //string CONSUMER_KEY = "REPLACE WITH YOUR CONNECTED APP CONSUMER KEY";
        string CONSUMER_KEY = "3MVG9KsVczVNcM8wV1h42C3_gZKVYrH4JVYFw.PctBiGFGMp.bzzVIWB2wW.PK2tYBMDlwFd8FzAwJQ7nWkwm";
        //string CONSUMER_SECRET = "REPLACE WITH YOUR CONNECTED APP CONSUMER SECRET";
        string CONSUMER_SECRET = "FE27E7A8FA60FCBF36D6395557BD8622335A02C7C0EE97F73FF4A8F1BEE625A0";

        //string TOKEN_REQUEST_ENDPOINTURL = "https://login.salesforce.com/services/oauth2/token";
        //string TOKEN_REQUEST_ENDPOINTURL = "https://login.salesforce.com/services/oauth2/token";
        string TOKEN_REQUEST_ENDPOINTURL = "https://eb1-dev-ed.my.salesforce.com/services/oauth2/token";

        //string TOKEN_REQUEST_QUERYURL = "/services/data/v43.0/query?q=select+Id+,name+from+account+limit+10";
        string TOKEN_REQUEST_QUERYURL = "/services/data/v51.0/query?q=select+Id+,name+from+account+limit+10";

		System.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;

//ERROR: session expired or invalid : INVALID_SESSION_ID

//added trying to understand the issue below it....
Task leadResponse = Task.Run(() =&amp;gt; 
//Script.AsyncQueryRequest(authResponse.Result.access_token , 
Script.AsyncQueryRequest("fGwleDX053vvNRuZSwWqQCvgi" , 
//authResponse.Result.instance_url));
"https://cdi-dev-ed.my.salesforce.com/"));





/*
		HttpClient _httpClient = new HttpClient();
        var request = new HttpRequestMessage&amp;lt;br /&amp;gt;
        {
            Method = HttpMethod.Post,
            RequestUri = new Uri(Constants.TOKEN_REQUEST_ENDPOINTURL),
            Content = content
        };
        var responseMessage = await _httpClient.SendAsync(request).ConfigureAwait(false);
        var response = await responseMessage.Content.ReadAsStringAsync().ConfigureAwait(false);
*/
	}

	public void old_btnTest_Click(object sender, System.EventArgs args)
	{
/*
		string URL = "https://sub.domain.com/objects.json?api_key=123";
		string DATA = @"{""object"":{""name"":""Name""}}";

		HttpWebRequest request = (HttpWebRequest)WebRequest.Create(URL);
		request.Method = "POST";
		request.ContentType = "application/json";
		request.ContentLength = DATA.Length;
		StreamWriter requestWriter = new StreamWriter(request.GetRequestStream(), System.Text.Encoding.ASCII);
		requestWriter.Write(DATA);
		requestWriter.Close();
*/


//https://dev.to/rachelsoderberg/integrating-c-net-and-salesforce-s-rest-api-d00
//NOTE: stuff defined further above like AuthToken
//ALSO: The above getters and setters contain confidential information. 
//	These should be stored using a secure method for retrieval during authentication.
Client = new HttpClient();

//in ms vs version, this is not done
//String myUrl = "https://eb1-dev-ed.my.salesforce.com/services/oauth2/token";
//Uri myURI = new Uri(myUrl);
//Client.BaseAddress = myURI;

Username = "frmartell3@gmail.com";
Password = "Spider#8.3";
Token = "VVrWKdSl9I9TJzL4bFvYmDdJ";
ClientId = "3MVG9KsVczVNcM8wV1h42C3_gZKVYrH4JVYFw.PctBiGFGMp.bzzVIWB2wW.PK2tYBMDlwFd8FzAwJQ7nWkwm";
ClientSecret = "FE27E7A8FA60FCBF36D6395557BD8622335A02C7C0EE97F73FF4A8F1BEE625A0";
string PwdToken = Password + Token;
//https://developer.salesforce.com/forums/?id=906F0000000AfcgIAC
// &amp;gt;&amp;gt; created a connected app called TestAPIConnect
//	that gave me a client id and secret to use
//	takes 2-10 minutes to become effective
HttpContent content = new FormUrlEncodedContent(new Dictionary&amp;lt;string, string&amp;gt;
{
    {"grant_type", "password"},
    {"client_id", ClientId},
    {"client_secret", ClientSecret},
    {"username", Username},
//    {"password", Password}
    {"password", PwdToken}
});
//MessageBox.Show("1");
HttpResponseMessage message = Client.PostAsync(LoginEndpoint, content).Result;
MessageBox.Show(message.ToString());

string response2 = message.Content.ReadAsStringAsync().Result;
//MessageBox.Show(response2.ToString());

            JObject obj = JObject.Parse(response2);

            AuthToken = (string)obj["access_token"];
            // &amp;gt;&amp;gt; "00D1U0000010xom!AQMAQJZKPjCuneGyOKh8HAV7GnYKpASbALVqfMvGMwVUUAK6U0MPzZShVDNdwiw.rBRZPo9j9YAJTahknyetSK.NMM3dGPbk"
            ServiceUrl = (string)obj["instance_url"];
            // &amp;gt;&amp;gt; "https://eb1-dev-ed.my.salesforce.com"

//MessageBox.Show("AuthToken: " + AuthToken + " / ServiceUrl: " + ServiceUrl);

            // Get an sf record
            string companyName = "Acme North";
            //string queryMessage = $"SELECT Id, Name, Phone, Type FROM Account WHERE Name = '{companyName}'";
            //string queryMessage2 = "SELECT Id, Name, Phone, Type FROM Account WHERE Name = '{companyName}'";
            string queryMessage2 = "SELECT Id, Name, Phone, Type FROM Account WHERE Name = '" + companyName + "'";
MessageBox.Show("2");
//An invalid request URI was provided. The request URI must either be an absolute URI or BaseAddress must be set.
//String myUrl = "https://eb1-dev-ed.lightning.force.com/";
//  String myUrl = "https://eb1-dev-ed.my.salesforce.com/services/oauth2/token";
//  Uri myURI = new Uri(myUrl);
//  Client.BaseAddress = myURI;
//add lines above, now get:
//  This instance has already started one or more requests. Properties can only be modified before sending the first request.
//move 3 lines above up further, now get:
//  Unexpected character encountered while parsing value: &amp;lt;. Path '', line 0, position 0.
//  url doesn't exist!!!
//MessageBox.Show("2.5: " + QueryRecord(Client, queryMessage2) );
            JObject obj2 = JObject.Parse(QueryRecord(Client, queryMessage2));
MessageBox.Show("obj2: " + obj2);

//NOTE: had to copy System.Text.Json.dll from laptop into epicor folder and add reference here
//also add ref to: System.Memory.dll

            //using var doc = JsonDocument.Parse(obj2["records"].ToString());
            //using (var doc = JsonDocument.Parse(obj2["records"].ToString()) );
//zzzzzz
            //var doc = JsonDocument.Parse(obj2["records"].ToString());
            //string doc = JsonDocument.Parse(obj2["records"].ToString());
            //System.Text.Json.JsonDocument doc = JsonDocument.Parse(obj2["records"].ToString());
// Error: CS1705 - line 0 (0) - Assembly 'System.Text.Json, Version=4.0.1.2,
// Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' uses 'System.Memory, Version=4.2.1.0, 
//Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' which has a higher version than referenced assembly 
//'System.Memory, Version=4.0.1.1, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'
//			MessageBox.Show("doc: " + doc);

        string accountId = "";

        if ((string)obj2["totalSize"] == "1")
        {
            // Only one record, use it
            //string accountId = (string)obj2["records"][0]["Id"];
            accountId = (string)obj2["records"][0]["Id"];
            string accountPhone = (string)obj2["records"][0]["Phone"];

			//MessageBox.Show("one record");
        }
        if ((string)obj2["totalSize"] == "0")
        {
            // No record, create an Account
			//MessageBox.Show("No record");
        }
        else
        {
            // Multiple records, either filter further to determine correct Account or choose the first result
			//MessageBox.Show("Multiple records: " + (string)obj2["totalSize"]);
        }


          // Update a SF record
          string phone = "123-123-4444";
          //string updateMessage = $"&amp;lt;root&amp;gt;" +
          //    $"&amp;lt;Phone&amp;gt;{phone}&amp;lt;/Phone&amp;gt;" +
          //    $"&amp;lt;/root&amp;gt;";
          string updateMessage = "&amp;lt;root&amp;gt;" +
              "&amp;lt;Phone&amp;gt;" + phone + "&amp;lt;/Phone&amp;gt;" +
              "&amp;lt;/root&amp;gt;";
          string result = UpdateRecord(Client, updateMessage, "Account", accountId);
          if (result != "")
          {
              //logger.SalesforceError("Update", "Account");
              //return null;
          }
          //logger.SalesforceSuccess("Update", "Account", accountId);
          //return accountId;



           // Create an SF record
           string companyName2 = "ACME New";
           string phone2 = "123-456-7890";

           string createMessage = "&amp;lt;root&amp;gt;" +
               "&amp;lt;Name&amp;gt;" + companyName2 + "&amp;lt;/Name&amp;gt;" +
               "&amp;lt;Phone&amp;gt;" + phone2 + "&amp;lt;/Phone&amp;gt;" +
               "&amp;lt;/root&amp;gt;";

           string result2 = CreateRecord(Client, createMessage, "Account");



//code below wasn't working before, added code above that does work
return;


//NOTE:  added ref to: Newtonsoft.Json.dll
//	   added: using Newtonsoft.Json.Linq;
/*
string response2 = message.Content.ReadAsStringAsync().Result;
//MessageBox.Show(response2);
txtTestResults.Text = response2;
MessageBox.Show("0");
//Unexpected character encountered while parsing value: &amp;lt;. Path '', line 0, position 0.
JObject obj = JObject.Parse(response2);
MessageBox.Show("1");
AuthToken = (string)obj["access_token"];
MessageBox.Show("2");
ServiceUrl = (string)obj["instance_url"];
MessageBox.Show("3");
MessageBox.Show("AuthToken: " + AuthToken + " / ServiceUrl: " + ServiceUrl );
MessageBox.Show("4");
*/
/*
    private string ClientId { get; set; }
    private string ClientSecret { get; set; }
    public string AuthToken { get; set; }
    public string ServiceUrl { get; set; }
*/

//    public const string LoginEndpoint = "https://cdi-dev-ed.my.salesforce.com/";
//    public const string ApiEndpoint = "/services/data/v51.0/"; //Use your org's version number

//    public const string ApiEndpoint = "/services/data/51.0/"; //Use your org's version number
//    public const string ApiEndpoint = "/services/data/v51.0/"; //Use your org's version number
ServiceUrl = "https://eb1-dev-ed.lightning.force.com/";
//ServiceUrl = "https://eb1-dev-ed.lightning.force.com/services/data/51.0/";
//string queryMessage = $"SELECT Id, Name, Phone, Type FROM Account WHERE Name = '{companyName}'";
//string queryMessage = "SELECT Id, Name FROM Account WHERE Name = 'Acme North'";
//string queryMessage = "SELECT Id, Name FROM Account LIMIT 1";
string queryMessage = "SELECT%7DId,%7DName%7DFROM%7DAccount%7DLIMIT%7D1";
//string restQuery = $"{ServiceUrl}{ApiEndpoint}query?q={queryMessage}";
//string restQuery = "{ServiceUrl}{ApiEndpoint}query?q={queryMessage}";
string restQuery = ServiceUrl + ApiEndpoint + "query?q=" + queryMessage;
//string restQuery = ServiceUrl + ApiEndpoint + "search/?q=" + queryMessage;
//url no longer exists:
//string restQuery = ServiceUrl + "query?q=" + queryMessage;

//An invalid request URI was provided. The request URI must either be an absolute URI or BaseAddress must be set.

HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Get, restQuery);
request.Headers.Add("Authorization", "Bearer " + AuthToken);
request.Headers.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
MessageBox.Show("1");

//An invalid request URI was provided. The request URI must either be an absolute URI or BaseAddress must be set.
//HttpResponseMessage response = client.SendAsync(request).Result;
MessageBox.Show("5");
HttpResponseMessage response = Client.SendAsync(request).Result;
MessageBox.Show(response.ToString());
//return response.Content.ReadAsStringAsync().Result;
MessageBox.Show("6");
MessageBox.Show(response.Content.ReadAsStringAsync().Result);


//3:
/*
//https://www.forcetalks.com/blog/integrate-net-console-application-with-salesforce-rest-api/
System.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;
//Task authResponse = Task.Run(() =&amp;gt; Program.AsyncAuthRequesult != null)
//{
//	Object obj = AsyncQueryRequest();
//}
*/


	}

       //public static string QueryRecord(HttpClient client, string queryMessage)
       public string QueryRecord(HttpClient client, string queryMessage)
       {
           //string restQuery = $"{ServiceUrl}{ApiEndpoint}query?q={queryMessage}";
           //string restQuery = "{ServiceUrl}{ApiEndpoint}query?q={queryMessage}";
           string restQuery = ServiceUrl + ApiEndpoint + "query?q=" + queryMessage;
//MessageBox.Show("2.1 restQuery: " + restQuery + " / AuthToken: " + AuthToken );

           HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Get, restQuery);
           request.Headers.Add("Authorization", "Bearer " + AuthToken);
           request.Headers.Accept.Add(new System.Net.Http.Headers.MediaTypeWithQualityHeaderValue("application/json"));

           HttpResponseMessage response = client.SendAsync(request).Result;
           return response.Content.ReadAsStringAsync().Result;
       }

       public string UpdateRecord(HttpClient client, string updateMessage, string recordType, string recordId)
       {
           HttpContent contentUpdate = new StringContent(updateMessage, Encoding.UTF8, "application/xml");

           //string uri = $"{ServiceUrl}{ApiEndpoint}sobjects/{recordType}/{recordId}?_HttpMethod=PATCH";
           string uri = ServiceUrl + ApiEndpoint + "sobjects/" + recordType + "/" + recordId + "?_HttpMethod=PATCH";

           HttpRequestMessage requestUpdate = new HttpRequestMessage(HttpMethod.Post, uri);
           requestUpdate.Headers.Add("Authorization", "Bearer " + AuthToken);
           requestUpdate.Headers.Accept.Add(new System.Net.Http.Headers.MediaTypeWithQualityHeaderValue("application/xml"));
           requestUpdate.Content = contentUpdate;

           HttpResponseMessage response = client.SendAsync(requestUpdate).Result;
           return response.Content.ReadAsStringAsync().Result;
       }

       public string CreateRecord(HttpClient client, string createMessage, string recordType)
       {
           HttpContent contentCreate = new StringContent(createMessage, Encoding.UTF8, "application/xml");
           //string uri = $"{ServiceUrl}{ApiEndpoint}sobjects/{recordType}";
           string uri = ServiceUrl + ApiEndpoint + "sobjects/" + recordType;

           HttpRequestMessage requestCreate = new HttpRequestMessage(HttpMethod.Post, uri);
           requestCreate.Headers.Add("Authorization", "Bearer " + AuthToken);
           requestCreate.Headers.Accept.Add(new System.Net.Http.Headers.MediaTypeWithQualityHeaderValue("application/xml"));
           requestCreate.Content = contentCreate;

           HttpResponseMessage response = client.SendAsync(requestCreate).Result;
           return response.Content.ReadAsStringAsync().Result;
       }



	//3:
	//https://www.forcetalks.com/blog/integrate-net-console-application-with-salesforce-rest-api/
	/*
 	public async static Task AsyncQueryRequest(string token, string url)
        {
            HttpClient _httpClient = new HttpClient();
            var request = new HttpRequestMessage
            {
                Method = HttpMethod.Get,
                //RequestUri = new Uri(url + Constants.TOKEN_REQUEST_QUERYURL),
                RequestUri = new Uri(url + TOKEN_REQUEST_QUERYURL),
                Content = null
            };
            request.Headers.Authorization = new AuthenticationHeaderValue("Bearer", token);
            var responseMessage = await new HttpClient().SendAsync(request).ConfigureAwait(false);
            var response = await responseMessage.Content.ReadAsStringAsync().ConfigureAwait(false);
            return response;
        }
	*/


	//probably won't be used:
	//https://stackoverflow.com/questions/43089786/making-a-simple-c-sharp-api-call
	/*
    private static async Task&amp;lt;string&amp;gt; GetGameData(string id)
    {

		var url = "http://hivemc.com/json/userprofile/";

		using (var client = new HttpClient())
		{
			client.BaseAddress = new Uri(url);
			HttpResponseMessage response = await client.GetAsync(url);

			if (response.IsSuccessStatusCode)
			{
				string strResult = await response.Content.ReadAsStringAsync();
				return strResult;
			}
			else
			{
				return null;
			}
		}
	}
	*/

}




&lt;/PropertyValue&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserID /&gt;
    &lt;GroupID /&gt;
    &lt;PropertiesID /&gt;
  &lt;/Properties&gt;
  &lt;Properties&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;Customization&lt;/ControlName&gt;
    &lt;Key&gt;2dcd1674-5e34-4d98-b493-c75747027376&lt;/Key&gt;
    &lt;PropertyName&gt;Language&lt;/PropertyName&gt;
    &lt;PropertyValue&gt;CSharp&lt;/PropertyValue&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserID /&gt;
    &lt;GroupID /&gt;
    &lt;PropertiesID /&gt;
  &lt;/Properties&gt;
  &lt;Properties&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;btnTest&lt;/ControlName&gt;
    &lt;Key&gt;fddd0d23-f30e-42c6-a2ee-45be848e8247&lt;/Key&gt;
    &lt;PropertyName&gt;ChildIndex&lt;/PropertyName&gt;
    &lt;PropertyValue&gt;2&lt;/PropertyValue&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserID /&gt;
    &lt;GroupID /&gt;
    &lt;PropertiesID /&gt;
  &lt;/Properties&gt;
  &lt;Properties&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;btnTest&lt;/ControlName&gt;
    &lt;Key&gt;fddd0d23-f30e-42c6-a2ee-45be848e8247&lt;/Key&gt;
    &lt;PropertyName&gt;Parent&lt;/PropertyName&gt;
    &lt;PropertyValue&gt;006caf0c-d74d-4ec1-9d92-43eda1f2af96&lt;/PropertyValue&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserID /&gt;
    &lt;GroupID /&gt;
    &lt;PropertiesID /&gt;
  &lt;/Properties&gt;
  &lt;Properties&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;btnTest&lt;/ControlName&gt;
    &lt;Key&gt;fddd0d23-f30e-42c6-a2ee-45be848e8247&lt;/Key&gt;
    &lt;PropertyName&gt;Width&lt;/PropertyName&gt;
    &lt;PropertyValue&gt;60&lt;/PropertyValue&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserID /&gt;
    &lt;GroupID /&gt;
    &lt;PropertiesID /&gt;
  &lt;/Properties&gt;
  &lt;Properties&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;btnTest&lt;/ControlName&gt;
    &lt;Key&gt;fddd0d23-f30e-42c6-a2ee-45be848e8247&lt;/Key&gt;
    &lt;PropertyName&gt;AnchorWidth&lt;/PropertyName&gt;
    &lt;PropertyValue&gt;60&lt;/PropertyValue&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserID /&gt;
    &lt;GroupID /&gt;
    &lt;PropertiesID /&gt;
  &lt;/Properties&gt;
  &lt;Properties&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;btnTest&lt;/ControlName&gt;
    &lt;Key&gt;fddd0d23-f30e-42c6-a2ee-45be848e8247&lt;/Key&gt;
    &lt;PropertyName&gt;Height&lt;/PropertyName&gt;
    &lt;PropertyValue&gt;20&lt;/PropertyValue&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserID /&gt;
    &lt;GroupID /&gt;
    &lt;PropertiesID /&gt;
  &lt;/Properties&gt;
  &lt;Properties&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;btnTest&lt;/ControlName&gt;
    &lt;Key&gt;fddd0d23-f30e-42c6-a2ee-45be848e8247&lt;/Key&gt;
    &lt;PropertyName&gt;AnchorHeight&lt;/PropertyName&gt;
    &lt;PropertyValue&gt;20&lt;/PropertyValue&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserID /&gt;
    &lt;GroupID /&gt;
    &lt;PropertiesID /&gt;
  &lt;/Properties&gt;
  &lt;Properties&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;btnTest&lt;/ControlName&gt;
    &lt;Key&gt;fddd0d23-f30e-42c6-a2ee-45be848e8247&lt;/Key&gt;
    &lt;PropertyName&gt;Left&lt;/PropertyName&gt;
    &lt;PropertyValue&gt;607&lt;/PropertyValue&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserID /&gt;
    &lt;GroupID /&gt;
    &lt;PropertiesID /&gt;
  &lt;/Properties&gt;
  &lt;Properties&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;btnTest&lt;/ControlName&gt;
    &lt;Key&gt;fddd0d23-f30e-42c6-a2ee-45be848e8247&lt;/Key&gt;
    &lt;PropertyName&gt;Top&lt;/PropertyName&gt;
    &lt;PropertyValue&gt;1&lt;/PropertyValue&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserID /&gt;
    &lt;GroupID /&gt;
    &lt;PropertiesID /&gt;
  &lt;/Properties&gt;
  &lt;Properties&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;btnTest&lt;/ControlName&gt;
    &lt;Key&gt;fddd0d23-f30e-42c6-a2ee-45be848e8247&lt;/Key&gt;
    &lt;PropertyName&gt;AnchorLeft&lt;/PropertyName&gt;
    &lt;PropertyValue&gt;529&lt;/PropertyValue&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserID /&gt;
    &lt;GroupID /&gt;
    &lt;PropertiesID /&gt;
  &lt;/Properties&gt;
  &lt;Properties&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;btnTest&lt;/ControlName&gt;
    &lt;Key&gt;fddd0d23-f30e-42c6-a2ee-45be848e8247&lt;/Key&gt;
    &lt;PropertyName&gt;AnchorTop&lt;/PropertyName&gt;
    &lt;PropertyValue&gt;3&lt;/PropertyValue&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserID /&gt;
    &lt;GroupID /&gt;
    &lt;PropertiesID /&gt;
  &lt;/Properties&gt;
  &lt;Properties&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;btnTest&lt;/ControlName&gt;
    &lt;Key&gt;fddd0d23-f30e-42c6-a2ee-45be848e8247&lt;/Key&gt;
    &lt;PropertyName&gt;Anchor&lt;/PropertyName&gt;
    &lt;PropertyValue&gt;Top, Left&lt;/PropertyValue&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserID /&gt;
    &lt;GroupID /&gt;
    &lt;PropertiesID /&gt;
  &lt;/Properties&gt;
  &lt;Properties&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;btnTest&lt;/ControlName&gt;
    &lt;Key&gt;fddd0d23-f30e-42c6-a2ee-45be848e8247&lt;/Key&gt;
    &lt;PropertyName&gt;Text&lt;/PropertyName&gt;
    &lt;PropertyValue&gt;test api&lt;/PropertyValue&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserID /&gt;
    &lt;GroupID /&gt;
    &lt;PropertiesID /&gt;
  &lt;/Properties&gt;
  &lt;Properties&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;lblAddr&lt;/ControlName&gt;
    &lt;Key&gt;485841ed-f690-41c3-aa7e-3812df918e96&lt;/Key&gt;
    &lt;PropertyName&gt;ChildIndex&lt;/PropertyName&gt;
    &lt;PropertyValue&gt;1&lt;/PropertyValue&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserID /&gt;
    &lt;GroupID /&gt;
    &lt;PropertiesID /&gt;
  &lt;/Properties&gt;
  &lt;Properties&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;txtAddr&lt;/ControlName&gt;
    &lt;Key&gt;ffe95c7f-25a8-4431-a061-0ec9113ec9ab&lt;/Key&gt;
    &lt;PropertyName&gt;ChildIndex&lt;/PropertyName&gt;
    &lt;PropertyValue&gt;0&lt;/PropertyValue&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserID /&gt;
    &lt;GroupID /&gt;
    &lt;PropertiesID /&gt;
  &lt;/Properties&gt;
  &lt;Properties&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;lblAddr&lt;/ControlName&gt;
    &lt;Key&gt;485841ed-f690-41c3-aa7e-3812df918e96&lt;/Key&gt;
    &lt;PropertyName&gt;Top&lt;/PropertyName&gt;
    &lt;PropertyValue&gt;64&lt;/PropertyValue&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserID /&gt;
    &lt;GroupID /&gt;
    &lt;PropertiesID /&gt;
  &lt;/Properties&gt;
  &lt;Properties&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;lblAddr&lt;/ControlName&gt;
    &lt;Key&gt;485841ed-f690-41c3-aa7e-3812df918e96&lt;/Key&gt;
    &lt;PropertyName&gt;Left&lt;/PropertyName&gt;
    &lt;PropertyValue&gt;56&lt;/PropertyValue&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserID /&gt;
    &lt;GroupID /&gt;
    &lt;PropertiesID /&gt;
  &lt;/Properties&gt;
  &lt;Properties&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;lblAddr&lt;/ControlName&gt;
    &lt;Key&gt;485841ed-f690-41c3-aa7e-3812df918e96&lt;/Key&gt;
    &lt;PropertyName&gt;Width&lt;/PropertyName&gt;
    &lt;PropertyValue&gt;80&lt;/PropertyValue&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserID /&gt;
    &lt;GroupID /&gt;
    &lt;PropertiesID /&gt;
  &lt;/Properties&gt;
  &lt;Properties&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;lblAddr&lt;/ControlName&gt;
    &lt;Key&gt;485841ed-f690-41c3-aa7e-3812df918e96&lt;/Key&gt;
    &lt;PropertyName&gt;Height&lt;/PropertyName&gt;
    &lt;PropertyValue&gt;20&lt;/PropertyValue&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserID /&gt;
    &lt;GroupID /&gt;
    &lt;PropertiesID /&gt;
  &lt;/Properties&gt;
  &lt;Properties&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;grdSummaryOrderLines&lt;/ControlName&gt;
    &lt;Key&gt;bec51417-b286-4d61-a471-3912bc098905&lt;/Key&gt;
    &lt;PropertyName&gt;ChildIndex&lt;/PropertyName&gt;
    &lt;PropertyValue&gt;0&lt;/PropertyValue&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserID /&gt;
    &lt;GroupID /&gt;
    &lt;PropertiesID /&gt;
  &lt;/Properties&gt;
  &lt;Properties&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;txtTestResults&lt;/ControlName&gt;
    &lt;Key&gt;1a023fc8-c7ef-43a3-b45e-ce619976ad60&lt;/Key&gt;
    &lt;PropertyName&gt;ChildIndex&lt;/PropertyName&gt;
    &lt;PropertyValue&gt;1&lt;/PropertyValue&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserID /&gt;
    &lt;GroupID /&gt;
    &lt;PropertiesID /&gt;
  &lt;/Properties&gt;
  &lt;Properties&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;txtTestResults&lt;/ControlName&gt;
    &lt;Key&gt;1a023fc8-c7ef-43a3-b45e-ce619976ad60&lt;/Key&gt;
    &lt;PropertyName&gt;Parent&lt;/PropertyName&gt;
    &lt;PropertyValue&gt;006caf0c-d74d-4ec1-9d92-43eda1f2af96&lt;/PropertyValue&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserID /&gt;
    &lt;GroupID /&gt;
    &lt;PropertiesID /&gt;
  &lt;/Properties&gt;
  &lt;Properties&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;txtTestResults&lt;/ControlName&gt;
    &lt;Key&gt;1a023fc8-c7ef-43a3-b45e-ce619976ad60&lt;/Key&gt;
    &lt;PropertyName&gt;Width&lt;/PropertyName&gt;
    &lt;PropertyValue&gt;156&lt;/PropertyValue&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserID /&gt;
    &lt;GroupID /&gt;
    &lt;PropertiesID /&gt;
  &lt;/Properties&gt;
  &lt;Properties&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;txtTestResults&lt;/ControlName&gt;
    &lt;Key&gt;1a023fc8-c7ef-43a3-b45e-ce619976ad60&lt;/Key&gt;
    &lt;PropertyName&gt;AnchorWidth&lt;/PropertyName&gt;
    &lt;PropertyValue&gt;156&lt;/PropertyValue&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserID /&gt;
    &lt;GroupID /&gt;
    &lt;PropertiesID /&gt;
  &lt;/Properties&gt;
  &lt;Properties&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;txtTestResults&lt;/ControlName&gt;
    &lt;Key&gt;1a023fc8-c7ef-43a3-b45e-ce619976ad60&lt;/Key&gt;
    &lt;PropertyName&gt;Height&lt;/PropertyName&gt;
    &lt;PropertyValue&gt;74&lt;/PropertyValue&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserID /&gt;
    &lt;GroupID /&gt;
    &lt;PropertiesID /&gt;
  &lt;/Properties&gt;
  &lt;Properties&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;txtTestResults&lt;/ControlName&gt;
    &lt;Key&gt;1a023fc8-c7ef-43a3-b45e-ce619976ad60&lt;/Key&gt;
    &lt;PropertyName&gt;AnchorHeight&lt;/PropertyName&gt;
    &lt;PropertyValue&gt;74&lt;/PropertyValue&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserID /&gt;
    &lt;GroupID /&gt;
    &lt;PropertiesID /&gt;
  &lt;/Properties&gt;
  &lt;Properties&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;txtTestResults&lt;/ControlName&gt;
    &lt;Key&gt;1a023fc8-c7ef-43a3-b45e-ce619976ad60&lt;/Key&gt;
    &lt;PropertyName&gt;Left&lt;/PropertyName&gt;
    &lt;PropertyValue&gt;622&lt;/PropertyValue&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserID /&gt;
    &lt;GroupID /&gt;
    &lt;PropertiesID /&gt;
  &lt;/Properties&gt;
  &lt;Properties&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;txtTestResults&lt;/ControlName&gt;
    &lt;Key&gt;1a023fc8-c7ef-43a3-b45e-ce619976ad60&lt;/Key&gt;
    &lt;PropertyName&gt;Top&lt;/PropertyName&gt;
    &lt;PropertyValue&gt;3&lt;/PropertyValue&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserID /&gt;
    &lt;GroupID /&gt;
    &lt;PropertiesID /&gt;
  &lt;/Properties&gt;
  &lt;Properties&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;txtTestResults&lt;/ControlName&gt;
    &lt;Key&gt;1a023fc8-c7ef-43a3-b45e-ce619976ad60&lt;/Key&gt;
    &lt;PropertyName&gt;AnchorLeft&lt;/PropertyName&gt;
    &lt;PropertyValue&gt;622&lt;/PropertyValue&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserID /&gt;
    &lt;GroupID /&gt;
    &lt;PropertiesID /&gt;
  &lt;/Properties&gt;
  &lt;Properties&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;txtTestResults&lt;/ControlName&gt;
    &lt;Key&gt;1a023fc8-c7ef-43a3-b45e-ce619976ad60&lt;/Key&gt;
    &lt;PropertyName&gt;AnchorTop&lt;/PropertyName&gt;
    &lt;PropertyValue&gt;3&lt;/PropertyValue&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserID /&gt;
    &lt;GroupID /&gt;
    &lt;PropertiesID /&gt;
  &lt;/Properties&gt;
  &lt;Properties&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;txtTestResults&lt;/ControlName&gt;
    &lt;Key&gt;1a023fc8-c7ef-43a3-b45e-ce619976ad60&lt;/Key&gt;
    &lt;PropertyName&gt;Anchor&lt;/PropertyName&gt;
    &lt;PropertyValue&gt;Top, Left&lt;/PropertyValue&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserID /&gt;
    &lt;GroupID /&gt;
    &lt;PropertiesID /&gt;
  &lt;/Properties&gt;
  &lt;Properties&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;txtTestResults&lt;/ControlName&gt;
    &lt;Key&gt;1a023fc8-c7ef-43a3-b45e-ce619976ad60&lt;/Key&gt;
    &lt;PropertyName&gt;Text&lt;/PropertyName&gt;
    &lt;PropertyValue /&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserID /&gt;
    &lt;GroupID /&gt;
    &lt;PropertiesID /&gt;
  &lt;/Properties&gt;
  &lt;Properties&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;grpShipTo&lt;/ControlName&gt;
    &lt;Key&gt;623033c5-a5c0-4b24-bdc6-362470a0ac41&lt;/Key&gt;
    &lt;PropertyName&gt;ChildIndex&lt;/PropertyName&gt;
    &lt;PropertyValue&gt;0&lt;/PropertyValue&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserID /&gt;
    &lt;GroupID /&gt;
    &lt;PropertiesID /&gt;
  &lt;/Properties&gt;
  &lt;Properties&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;grpShipTo&lt;/ControlName&gt;
    &lt;Key&gt;623033c5-a5c0-4b24-bdc6-362470a0ac41&lt;/Key&gt;
    &lt;PropertyName&gt;Anchor&lt;/PropertyName&gt;
    &lt;PropertyValue&gt;Top, Left&lt;/PropertyValue&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserID /&gt;
    &lt;GroupID /&gt;
    &lt;PropertiesID /&gt;
  &lt;/Properties&gt;
  &lt;Properties&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;grpShipTo&lt;/ControlName&gt;
    &lt;Key&gt;623033c5-a5c0-4b24-bdc6-362470a0ac41&lt;/Key&gt;
    &lt;PropertyName&gt;AnchorTop&lt;/PropertyName&gt;
    &lt;PropertyValue&gt;24&lt;/PropertyValue&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserID /&gt;
    &lt;GroupID /&gt;
    &lt;PropertiesID /&gt;
  &lt;/Properties&gt;
  &lt;Properties&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;grpShipTo&lt;/ControlName&gt;
    &lt;Key&gt;623033c5-a5c0-4b24-bdc6-362470a0ac41&lt;/Key&gt;
    &lt;PropertyName&gt;AnchorLeft&lt;/PropertyName&gt;
    &lt;PropertyValue&gt;430&lt;/PropertyValue&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserID /&gt;
    &lt;GroupID /&gt;
    &lt;PropertiesID /&gt;
  &lt;/Properties&gt;
  &lt;Properties&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;grpShipTo&lt;/ControlName&gt;
    &lt;Key&gt;623033c5-a5c0-4b24-bdc6-362470a0ac41&lt;/Key&gt;
    &lt;PropertyName&gt;AnchorWidth&lt;/PropertyName&gt;
    &lt;PropertyValue&gt;427&lt;/PropertyValue&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserID /&gt;
    &lt;GroupID /&gt;
    &lt;PropertiesID /&gt;
  &lt;/Properties&gt;
  &lt;Properties&gt;
    &lt;FormsID&gt;SalesOrderForm&lt;/FormsID&gt;
    &lt;ControlName&gt;grpShipTo&lt;/ControlName&gt;
    &lt;Key&gt;623033c5-a5c0-4b24-bdc6-362470a0ac41&lt;/Key&gt;
    &lt;PropertyName&gt;AnchorHeight&lt;/PropertyName&gt;
    &lt;PropertyValue&gt;197&lt;/PropertyValue&gt;
    &lt;Company /&gt;
    &lt;Plant /&gt;
    &lt;DcdUserID /&gt;
    &lt;GroupID /&gt;
    &lt;PropertiesID /&gt;
  &lt;/Properties&gt;
&lt;/CustomizationDS&gt;</Content>
    <BitFlag>0</BitFlag>
    <RowMod />
  </XXXDef>
</GenXDataDataSet>