global class CDIEpicorPricing_apex {

    public static Map<String, String> epicorPricingData = new Map<String, String>();

    @AuraEnabled  //needed to be able to call it from the aura realm
    //public static Map<String,String> getEpicorPricing(string product2ID) {        
    //public static String getEpicorPricing(string opportunityLineItemID) {
    
//REVERSE:
//    public static Map<String, String> getEpicorPricing(string opportunityLineItemID) {
//    public static Map<String, String> getEpicorPricing(string opportunityLineItemID, string strPart) {
    public static Map<String, String> getEpicorPricing(string opportunityLineItemID, string strPart, integer intQuantity, string strUOM, string strCustID) {
        
        String strReturnValue = 'apex';

// !!! THIS DOES NOT WORK, DID IT BEFORE???? !!
// issue = opportunityLineItemID is null, dafuq?!?!
        //get the related sf opportunity line item record from the id
        OpportunityLineItem[] opportunityLineItem;
        opportunityLineItem = [SELECT Id,ProductCode FROM OpportunityLineItem WHERE Id = :opportunityLineItemID];
        for (OpportunityLineItem row : opportunityLineItem) {
            //salesforceProduct2Data.put('Name', a.Name);
            strReturnValue = row.ProductCode;
epicorPricingData.put('debugInfo', 'row.ProductCode: ' + strReturnValue + ' / strPart:' + strPart + ' / strUOM:' + strUOM);
//epicorPricingData.put('debugInfo', 'row.ProductCode: ' + strReturnValue );
        }
//epicorPricingData.put('debugInfo', 'opportunityLineItemID: ' + opportunityLineItemID);

        
        String url = 'callout:CDI_Epicor/Erp.BO.PriceListInquirySvc/GetPriceListInquiry';


		try {
            //NOTE: if connection to epicor fails, this crashes hard, the catch never executes, 
            //		and return of variable never happens
            
            // Instantiate a new HTTP request, specify the method (GET) as well as the endpoint
            HttpRequest req = new HttpRequest();
            req.setEndpoint(url);
            req.setMethod('POST');


//epicorPricingData.put('debugInfo', 'x: ' + opportunityLineItemID + ' / ' + strPart + ' / '  + intQuantity + ' / '  + strUOM + ' / '  + strCustID);
            
            Http h = new Http();

//string strPart, integer intQuantity, string strUOM, string strCustID) {
            String body = 
                '        { ' +
                '            "icCustID": "' + strCustID + '", ' +
                '            "icShipToNum": "", ' +
                '            "icPartNum": "' + strPart + '", ' +
                '            "icCustGroupCode": "", ' +
                '            "icProductCode": "", ' +
                '            "idQuantity": "' + intQuantity + '", ' +
                '            "icUOMCode": "' + strUOM + '", ' +
                '            "icWarehouseCode": "", ' +
                '            "icCurrencyCode": "", ' +
                '            "pageSize": 0, ' +
                '            "absolutePage": 0 ' +
                '        }' +            
                '';

                integer intHeaderLength = body.length();
                req.setHeader('Content-Length', String.valueOf(intHeaderLength));
                req.setHeader('Content-Type', 'application/json');
                req.setHeader('accept', 'application/json');
                
                req.setBody(body);

            
            
strReturnValue += ' 2 ';
String zzz = req.getBody();
strReturnValue += ' 2.5 ' + zzz;
    
            HttpResponse res = h.send(req);
            System.debug(res.getBody());
    
strReturnValue += ' 3 ' + res.getBody();
            JSONParser parser = JSON.createParser(res.getBody());
            //NOTE:  if epicor is down, this is where it fails because parser is empty:
strReturnValue += ' 4 ';
    
            while (parser.nextToken() != null) {
strReturnValue += ' 5 ';
                if ((parser.getCurrentToken() == JSONToken.FIELD_NAME) && 
                    (parser.getText() == 'ListCode' || parser.getText() == 'CurrencyCode'
                     || parser.getText() == 'BasePrice' || parser.getText() == 'BreakPrice'
                     || parser.getText() == 'NetPrice' || parser.getText() == 'Quantity'
                     || parser.getText() == 'zz')) 
                {
                    string fieldName = parser.getText();

strReturnValue += ' 6 ' + parser.getText();
                    
                    parser.nextToken();
                    
                    //original trial returning one value
                    //url_result = parser.getText();

strReturnValue += ' 7 ' + parser.getText();
                    
                    string fieldValue; 
                    if(fieldName == 'Calculated_OnHand'
                       || fieldName == 'Calculated_Allocated' || fieldName == 'Calculated_Demand'
                       || fieldName == 'Calculated_Available')
                    {
                        //fieldValue = String.valueOf(decimal.valueOf(parser.getText()));
                        fieldValue = currency(parser.getText());
                    }
                    else
                    {
                        fieldValue = parser.getText();
                    }
                    
                    epicorPricingData.put(fieldName, fieldValue);
 
//strReturnValue += ' /x: ' + epicorPricingData['x'];
                    
                    //KEEP: for debugging, to add debug log info
                    //System.debug('url_result: ' + url_result );
                    
                    epicorPricingData.put('Epicor_Status', 'OK');
                    
                }
            }
        } catch (DmlException de) {
            epicorPricingData.put('Epicor_Status', 'Epicor Error: ' + de );
        }
        catch (Exception e) {
            epicorPricingData.put('Epicor_Status', 'Epicor Error: ' + e );
        }


strReturnValue += ' /ListCode ' + epicorPricingData.get('ListCode');
        
// !!! there is more below this in epicorinventory.apxc
       
        
        //return strReturnValue;
        return epicorPricingData;

    }


    public static String currency(String i) {
        // - Error this doesn't handle negative number converts -15 to -14.999  instead of -15.001 before round
        //String s = ( Decimal.valueOf(i==null||i.trim()==''?'0':i).setScale(2) + 0.001 ).format();
        //return s.substring(0,s.length()-1);
    
        if (( i == null) || ( i == ''))
        {
            return '0';
        }
        else
        {
            string s;
            if ( Decimal.valueOf(i) >= 0 )
            {
                s =  ( Decimal.valueOf(i).setScale(2) + 0.001 ).format();
            }
            else
            {
                s = ( Decimal.valueOf(i).setScale(2) - 0.001 ).format();
            }
	        return s.substring(0,s.length()-1);
        }
    
    }
    
}