({
	myAction : function(component, event, helper) {
		
	}, 
        

    doInit : function(component, event, helper) 
    {
        //alert("doInit"); 
        
        //get and store the product on the current sf opportunity line item
		helper.getOpportunityLineItemProductCode(
            component, event, helper, 
            function(){
            }
        );

    },


    handleProductCodeChange : function (component, event, helper) {
        //alert("old value: " + event.getParam("oldValue"));
        //alert("current value: " + event.getParam("value"));

        var strPartNum = event.getParam("value");
        
        //get and store the epicor part info
        helper.getEpicorPart(
            component, event, helper, 
            strPartNum,
            function(){                
            }    
        );

    },
       

    //https://salesforce.stackexchange.com/questions/211053/accessing-data-in-the-controller-and-app-file-that-is-returned-from-a-helper-fun/211054#211054
    handle_btnGetPricing_poc_this_works : function(component, event, helper) 
    {
		helper.loadData(component, event, helper, "part x", function(){
			component.set("v.strPriceCode1", component.get("v.strPriceCodeTemp"));
		}); 

        helper.loadData(component, event, helper, "part z", function(){
			component.set("v.strPriceCode2", component.get("v.strPriceCodeTemp"));
      	}); 
                
    },
    
    handle_btnGetPricing : function(component, event, helper) 
    {
        
        if(component.get("v.strMessage").indexOf("Epicor Error") != -1){
            //note: make user fix connection error before trying to get pricing
	        if(component.get("v.strMessage").indexOf("Invalid UOM") != -1){
                //note: exception since they can fix this on the form 
            }
            else{
                alert("Please fix Epicor Error and hit refresh before continuing.");
                return;
            }
        }
            
        component.set("v.strMessage", "Retrieving Information....");
        component.set("v.strDebugMessage", "");

        component.set("v.strPrice1", "");
        component.set("v.dExtPrice1", "");
		component.set("v.strPriceCode1", ""); 
        component.set("v.strPrice2", "");
        component.set("v.dExtPrice2", "");
        component.set("v.strPriceCode2", ""); 
        component.set("v.strPrice3", "");
        component.set("v.dExtPrice3", "");
        component.set("v.strPriceCode3", ""); 
        component.set("v.strPrice4", "");
        component.set("v.dExtPrice4", "");
        component.set("v.strPriceCode4", ""); 
        component.set("v.strPrice5", "");
        component.set("v.dExtPrice5", "");
        component.set("v.strPriceCode5", "");
        
        component.set("v.strCurrentInputField", "");

        component.set('v.blnLoaded', false);
        var strPartNum = component.get("v.strOpportunityLineItemProductCode");
        
        helper.getEpicorPricing(
            component, event, helper, 
            component.get("v.strEpicorCustId"),
            strPartNum,
            component.get("v.dQuantity1"),
            component.get("v.strUOM1"),

            function(){
                if(component.get("v.strMessage").indexOf('Error') == -1  
                  || component.get("v.strMessage").indexOf('Invalid UOM') != -1){
					if(component.get("v.strMessage").indexOf('Invalid UOM') == -1  ){
                        component.set("v.strPrice1", component.get("v.strPriceTemp"));
						component.set("v.dExtPrice1", component.get("v.dExtPriceTemp"));
                        component.set("v.strPriceCode1", component.get("v.strPriceCodeTemp"));
                        component.set("v.strMessage", "Epicor Data Loaded");
                    }
                    else{
                        component.set("v.strPriceCode1", "Invalid UOM");
                        component.set("v.strMessage", "Epicor Data Loaded");
                    }

                    //getRestOfPricing(); 
                    //var getRestOfPricing = component.get('c.getRestOfPricing');
                    //$A.enqueueAction(getRestOfPricing);

                    //note: tried breaking this out to it's own method, but strange things happen
                    if(component.get("v.dQuantity2") != 0)
                    {
                        component.set('v.blnLoaded', false);
                        helper.getEpicorPricing(
                            component, event, helper, 
                            component.get("v.strEpicorCustId"),
                            strPartNum,
                            component.get("v.dQuantity2"),
				            component.get("v.strUOM2"),
                            function(){
								if(component.get("v.strMessage").indexOf('Invalid UOM') == -1  ){
                                    component.set("v.strPrice2", component.get("v.strPriceTemp"));
									component.set("v.dExtPrice2", component.get("v.dExtPriceTemp"));
                                    component.set("v.strPriceCode2", component.get("v.strPriceCodeTemp")); 
                                    component.set("v.strMessage", "Epicor Data Loaded");
                                    component.set('v.blnLoaded', true);
                                } 
                                else{
                                    component.set("v.strPriceCode2", "Invalid UOM");
                                    component.set("v.strMessage", "Epicor Data Loaded");           
                                }
                                
                            }
                        ); 
                    };
                    
                    
                    if(component.get("v.dQuantity3") != 0) 
                    {
                        component.set('v.blnLoaded', false);
                        helper.getEpicorPricing(
                            component, event, helper, 
                            component.get("v.strEpicorCustId"),
                            strPartNum,
                            component.get("v.dQuantity3"),
				            component.get("v.strUOM3"),
                            function(){
                                if(component.get("v.strMessage").indexOf('Invalid UOM') == -1  ){
                                    component.set("v.strPrice3", component.get("v.strPriceTemp"));
                                    component.set("v.dExtPrice3", component.get("v.dExtPriceTemp"));
                                    component.set("v.strPriceCode3", component.get("v.strPriceCodeTemp"));
                                    component.set("v.strMessage", "Epicor Data Loaded");
                                    component.set('v.blnLoaded', true);
                                }
                                else{
                                    component.set("v.strPriceCode3", "Invalid UOM");
                                    component.set("v.strMessage", "Epicor Data Loaded");         
                                }
                            }
                        ); 
                    };
            
                    if(component.get("v.dQuantity4") != 0)
                    {
                        component.set('v.blnLoaded', false);
                        helper.getEpicorPricing(
                            component, event, helper, 
                            component.get("v.strEpicorCustId"),
                            strPartNum,
                            component.get("v.dQuantity4"),
				            component.get("v.strUOM4"),
                            function(){
                                if(component.get("v.strMessage").indexOf('Invalid UOM') == -1  ){
                                    component.set("v.strPrice4", component.get("v.strPriceTemp"));
                                    component.set("v.dExtPrice4", component.get("v.dExtPriceTemp"));
                                    component.set("v.strPriceCode4", component.get("v.strPriceCodeTemp")); 
                                    component.set("v.strMessage", "Epicor Data Loaded");
                                    component.set('v.blnLoaded', true);
                                }
                                else{
                                    component.set("v.strPriceCode4", "Invalid UOM");
                                    component.set("v.strMessage", "Epicor Data Loaded");         
                                }

                            }
                        ); 
                    };
            
                    if(component.get("v.dQuantity5") != 0)
                    {
                        component.set('v.blnLoaded', false);
                        helper.getEpicorPricing(
                            component, event, helper, 
                            component.get("v.strEpicorCustId"),
                            strPartNum,
                            component.get("v.dQuantity5"),
				            component.get("v.strUOM5"),
                            function(){
                                if(component.get("v.strMessage").indexOf('Invalid UOM') == -1  ){
                                    component.set("v.strPrice5", component.get("v.strPriceTemp"));
                                    component.set("v.dExtPrice5", component.get("v.dExtPriceTemp"));
                                    component.set("v.strPriceCode5", component.get("v.strPriceCodeTemp")); 
                                    component.set("v.strMessage", "Epicor Data Loaded");
                                    component.set('v.blnLoaded', true);
                                }
                                else{
                                    component.set("v.strPriceCode5", "Invalid UOM");
                                    component.set("v.strMessage", "Epicor Data Loaded");
                                }

                            } 
                        ); 
                    };

                    
                }
                
				component.set('v.blnLoaded', true);

            }
        );
        
    },

	keyQtyCheck : function(component, event, helper){

        if (event.keyCode == 9) {
            //custom <tab> key logic
        	event.preventDefault();
            
            if(component.get("v.strCurrentInputField") == "inputQuantity1"){
                component.find("inputUOM1").focus();
            }
            if(component.get("v.strCurrentInputField") == "inputQuantity2"){
                component.find("inputUOM2").focus();
            }
            if(component.get("v.strCurrentInputField") == "inputQuantity3"){
                component.find("inputUOM3").focus();
            }
            if(component.get("v.strCurrentInputField") == "inputQuantity4"){
                component.find("inputUOM4").focus();
            }
            if(component.get("v.strCurrentInputField") == "inputQuantity5"){
                component.find("inputUOM5").focus();
            }            
        }
        
    },

	keyUOMCheck : function(component, event, helper){
        
        if (event.keyCode == 9) {
            //custom <tab> key logic
        	event.preventDefault();

            if(component.get("v.strCurrentInputField") == "inputUOM1"){
                component.find("inputQuantity2").focus();
            }
            if(component.get("v.strCurrentInputField") == "inputUOM2"){
                component.find("inputQuantity3").focus();
            }
            if(component.get("v.strCurrentInputField") == "inputUOM3"){
                component.find("inputQuantity4").focus();
            }
            if(component.get("v.strCurrentInputField") == "inputUOM4"){
                component.find("inputQuantity5").focus();
            }
            if(component.get("v.strCurrentInputField") == "inputUOM5"){
                component.find("inputQuantity1").focus();
            }

        };
        
    },
    
	onfocusCheck : function(component, event, helper){
		component.set("v.strCurrentInputField", event.getSource().get("v.name"));        
    },

    
})