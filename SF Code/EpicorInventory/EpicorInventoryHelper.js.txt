({
	helperMethod : function() 
    {
		
	},
        
    getSalesforceProduct2 : function(component) 
    {
        
		var product2ID = component.get("v.recordId");
		var salesforceProduct2 = component.get("c.getSalesforceProduct2");
        salesforceProduct2.setParams({"product2ID":product2ID});

        //for debugging:
        //component.set("v.lblRefresh", "1");

        //NOTE: not sure why all this is necessary (instead of just 'component.set("v.buttonLabel", name);'), but it is
        salesforceProduct2.setCallback(this, function(response) {
            var state = response.getState();
            if (state === "SUCCESS") {
                //returning a string:
                //component.set("v.buttonLabel", response.getReturnValue());
                
                //returning a dictionary with known values in each pair:
                var salesforceProduct2Data = response.getReturnValue();

                //testing when it was a string:
                //component.set("v.lblRefresh", salesforceProduct2Data);
                
                //for debugging:
                //component.set("v.lblRefresh", salesforceProduct2Data["Name"]);

                component.set("v.valueOnHand", salesforceProduct2Data["EpicorOnHand"]);
                component.set("v.valueAllocated", salesforceProduct2Data["EpicorAllocated"]);
                component.set("v.valueDemand", salesforceProduct2Data["EpicorDemand"]);
                component.set("v.valueAvailable", salesforceProduct2Data["EpicorAvailable"]);
				component.set("v.valueLastUpdated", salesforceProduct2Data["EpicorInvDateLast"]);

            }
            else {
                //console.log("Failed with state: " + state);
                component.set("v.lblRefresh", "Failed with state: " + state);
            }
        });
        $A.enqueueAction(salesforceProduct2);
        
        //component.set("v.lblRefresh", returnValue);
        
    },
    
    getEpicorInventory : function(component) 
    {
                
        var product2ID = component.get("v.recordId");
        //for testing:
		//component.set("v.lblRefresh", product2ID);

        //instantiate getEpicorInventory which actually resides in EpicorInventory.apxc apex code,
        //	which is referenced in the controller EpicorInventory.cmp as a controller itself in the definition up top
		var epicorInventory = component.get("c.getEpicorInventory");        
        epicorInventory.setParams({"product2ID":product2ID});

        //for debugging:
        //component.set("v.lblRefresh", "1");

        //NOTE: not sure why all this is necessary (instead of just 'component.set("v.buttonLabel", name);'), but it is
        epicorInventory.setCallback(this, function(response) {
            var state = response.getState();
            if (state === "SUCCESS") {
                //returning a string:
                //component.set("v.buttonLabel", response.getReturnValue());

                //returning a dictionary with known values in each pair:
                var epicorInventoryData = response.getReturnValue();
                
//not work:
//component.set("v.lblRefresh", epicorInventoryData["Part_PartNum"]);
//works:
//component.set("v.lblRefresh", "x");

                /*
                //keep this code. originally displayed from here, then changed concept.  may need to revisit.
                component.set("v.valueOnHand", epicorInventoryData["Calculated_OnHand"]);
                component.set("v.valueAllocated", epicorInventoryData["Calculated_Allocated"]);
                component.set("v.valueDemand", epicorInventoryData["Calculated_Demand"]);
                component.set("v.valueAvailable", epicorInventoryData["Calculated_Available"]);
                */
                
                component.set("v.lblUpdateStatus", "Epicor Status: " + epicorInventoryData["Epicor_Status"]);
                
            }
            else {
                //console.log("Failed with state: " + state);
                component.set("v.lblRefresh", "Failed with state: " + state);
            }
        });
        $A.enqueueAction(epicorInventory);

        
    } ,
        
})